name: Run tests

on:
  push:
    branches: [ production ]

jobs:
  laravel-tests:

    runs-on: ubuntu-latest

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      mysql:
        # Docker Hub image
        image: mysql
        # Provide the password for mysql
        env:
          MYSQL_DATABASE: laravel
          MYSQL_USER: laravel
          MYSQL_PASSWORD: password
        # Set health checks to wait until mysql has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 3306:3306

    env:
      DB_CONNECTION: mysql
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_DATABASE: laravel
      DB_USERNAME: laravel
      DB_PASSWORD: password

    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '7.4'
    - uses: actions/checkout@v2

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Cache vendor
      id: cache
      uses: actions/cache@v2
      with:
        path: ./vendor
        key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
    - name: Install Dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      env:
        APP_ENV: testing
    - name: composer dump-autoload
      run: composer dump-autoload
    - name: Generate key
      run: php artisan key:generate
    - name: Migrate
      run: php artisan migrate --seed
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Execute tests
      run: php artisan test
